require 'active_support/core_ext/object/blank'
require 'yaml'
require_relative '../models/service'
require_relative 'dashy/dashy_item'
require_relative 'dashy/dashy_section'

class DashyDashboardManager
  SECTION_ICON_MAP =
  {
    "Uncategorized" => "fas fa-question",
    "Media" => "fas fa-tv",
    "Monitoring" => "fas fa-magnifying-glass-chart",
    "Network" => "fas fa-network-wired",
    "Smart Home" => "fas fa-house-signal",
    "Infrastructure" => "fas fa-chart-network"
  }

  def initialize(config)
    @config = config
  end

  def get_dashboard_config
    return get_dashboard_config_hash
  end

  def get_sections_from_dashboard_config
    dashboard_config_hash = get_dashboard_config_hash
    dashboard_config_sections = dashboard_config_hash["sections"]
    create_dashy_sections_from_config_sections(dashboard_config_sections)
  end

  def get_updated_sections(services)
    new_sections = create_new_sections(services)
    sections_from_dashboard_config = get_sections_from_dashboard_config

    create_updated_sections(sections_from_dashboard_config, new_sections)
  end

  def update_dashboard_config_file(services)
    updated_sections = get_updated_sections(services)
    updated_config_sections = create_config_sections(updated_sections)

    dashboard_config_hash = get_dashboard_config_hash
    dashboard_config_hash["sections"] = updated_config_sections

    File.open(@config.dashy_config_file_path, 'w') do |file|
      dashboard_config_yaml = dashboard_config_hash.to_yaml
      file.write(dashboard_config_yaml)
    end

    return updated_config_sections
  end

  private

    def create_config_sections(sections)
      config_sections = sections.map do |section|
        config_items = section.items.map do |item|
          config_item = {
            "title" => item.title,
            "url" => item.url,
            "icon" => item.icon
          }
          if item.tags || item.tags.empty?
            config_item["tags"] = item.tags
          end
          config_item
        end
        config_section =
        {
          "name" => section.name,
          "icon" => section.icon,
          "items" => config_items
        }
        config_section
      end

      return config_sections
    end

    def create_dashy_sections_from_config_sections(config_sections)
      sections = config_sections.map do |config_section|
        items = config_section["items"].map do |config_item|
          DashyItem.new(config_item["title"], config_item["url"], config_item["icon"], config_item["tags"])
        end

        DashySection.new(config_section["name"], config_section["icon"], items)
      end

      return sections
    end

    def create_new_sections(services)
      section_name_to_items_hash = {}

      services.each do |s|
        if s.url.blank? || @config.ignored_service_names.include?(s.name)
          next
        end

        item = DashyItem.create_item_from_service(s)

        section_name = s.category.titleize

        if section_name_to_items_hash[section_name] == nil
          section_name_to_items_hash[section_name] = []
        end
        section_name_to_items_hash[section_name] << item
      end

      sections = section_name_to_items_hash.map do |section_name, items|
        create_dashy_section(section_name, items)
      end

      return sections.sort_by! { |s| s.name }
    end

    def create_dashy_section(section_name, items)
      icon =
        if SECTION_ICON_MAP.include?(section_name) then 
          SECTION_ICON_MAP[section_name]
        else
          nil
        end
        DashySection.new(section_name, icon, items.sort_by! { |i| i.title })
    end

    def get_dashboard_config_hash
      return YAML.load_file(@config.dashy_config_file_path)
    end

    def create_updated_sections(existing_sections, new_sections)
      updated_sections = []

      section_name_to_existing_sections_hash = existing_sections.to_h { |s| [s.name, s]}
      section_name_to_new_sections_hash = {}
      item_title_to_new_item_hash = {}
      item_hostname_to_new_item_hash = {}

      new_sections.each do |section|
        section_name_to_new_sections_hash[section.name] = section

        section.items.each do |item|
          item_title_to_new_item_hash[item.title] = item
          item_hostname_to_new_item_hash[item.hostname] = item
        end

        if !section_name_to_existing_sections_hash.include?(section.name)
          updated_sections << section
        end
      end

      existing_sections.each do |section|
        updated_items = []

        existing_items_to_keep = section.items.select do |i|
          !i.autogenerated? ||
          (!item_title_to_new_item_hash.include?(i.title) &&
           !item_hostname_to_new_item_hash.include?(i.hostname))
        end
        updated_items.concat(existing_items_to_keep)

        if section_name_to_new_sections_hash.include?(section.name)
          updated_items.concat(section_name_to_new_sections_hash[section.name].items)
        end

        updated_sections << create_dashy_section(section.name, updated_items)
      end

      return updated_sections.sort_by! { |s| s.name }
    end
end