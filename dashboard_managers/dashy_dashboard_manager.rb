require 'yaml'
require 'active_support/core_ext/object/blank'

require_relative 'dashy/dashy_item'
require_relative 'dashy/dashy_section'

class DashyDashboardManager
  SECTION_ICON_MAP =
  {
    "Uncategorized" => "fas fa-question",
    "Network" => "fas fa-network-wired",
    "Smart Home" => "fas fa-house-signal",
    "Infrastructure" => "fas fa-chart-network"
  }

  def initialize(config)
    @config = config
  end

  def get_dashboard_config
    return get_dashboard_config_hash
  end

  def get_sections_from_dashboard_config
    dashboard_config_hash = get_dashboard_config_hash
    dashboard_config_sections = dashboard_config_hash["sections"]
    create_sections_from_config_sections(dashboard_config_sections)
  end

  def update_dashboard_config_file(services)
    sections_from_services = create_sections_from_services(services)

    dashboard_config_hash = get_dashboard_config_hash
    dashboard_config_sections = dashboard_config_hash["sections"]
    sections_from_dashboard_config = create_sections_from_config_sections(dashboard_config_sections)

    updated_sections = sections_from_services
    updated_config_sections = create_config_sections(updated_sections)
    dashboard_config_hash["sections"] = updated_config_sections

    File.open(@config.dashy_config_file_path, 'w') do |file|
      dashboard_config_yaml = dashboard_config_hash.to_yaml
      file.write(dashboard_config_yaml)
    end

    return updated_config_sections
  end

  private

    def create_config_sections(sections)
      config_sections = sections.map do |section|
        config_items = section.items.map do |item|
          {
            "title" => item.title,
            "url" => item.url,
            "icon" => item.icon,
            "tags" => item.tags
          }
        end
        config_section =
        {
          "name" => section.name,
          "icon" => section.icon,
          "items" => config_items
        }
        config_section
      end

      return config_sections
    end

    def create_sections_from_config_sections(config_sections)
      sections = config_sections.map do |config_section|
        items = config_section["items"].map do |config_item|
          DashyItem.new(config_item["title"], config_item["url"], config_item["icon"], config_item["tags"])
        end

        DashySection.new(config_section["name"], config_section["icon"], items)
      end

      return sections
    end

    def create_sections_from_services(services)
      section_name_to_items_hash = {}

      services.each do |s|
        if s.url.blank? || s.opencontainers_image_title == "Dashy"
          next
        end

        item = create_item_from_service(s)

        section_name = s.category.titleize

        if section_name_to_items_hash[section_name] == nil
          section_name_to_items_hash[section_name] = []
        end
        section_name_to_items_hash[section_name] << item
      end

      sections = section_name_to_items_hash.map do |section_name, items|
        icon =
          if SECTION_ICON_MAP.include?(section_name) then 
            SECTION_ICON_MAP[section_name] 
          else
            nil
          end
        DashySection.new(section_name, icon, items.sort_by! { |i| i.title })
      end

      return sections
    end

    def create_item_from_service(service)
      icon = if service.image_url.present? then service.image_url else service.icon end

      return DashyItem.new(service.name, service.url, icon, ["_autogenerated"])
    end

    def get_dashboard_config_hash
      return YAML.load_file(@config.dashy_config_file_path)
    end
end