require 'yaml'

class DashyDashboardManager

  SECTION_ICON_MAP =
  {
    "Uncategorized" => "fas fa-question",
    "Network" => "fas fa-network-wired",
    "Smart Home" => "fas fa-house-signal",
    "Infrastructure" => "fas fa-chart-network"
  }

  def initialize(config)
    @config = config
  end

  def get_sections_hash
    dashboard_config_hash = YAML.load_file(@config.dashy_config_file_path)

    dashboard_config_hash["sections"]
  end

  def save_to_config_file(services)
    section_items_map = create_section_items_map(services)

    sections = section_items_map.map do |k,v|
      name = k.titleize
      {
        "name" => name,
        "icon" => if SECTION_ICON_MAP.include?(name) then SECTION_ICON_MAP[name] else "" end,
        "items" => v.sort_by! { |i| i["title"] }
      }
    end

    sections.sort_by! { |s| s["name"] }

    dashboard_config_file = YAML.load_file(@config.dashy_config_file_path)

    dashboard_config_file["sections"] = sections

    File.open(@config.dashy_config_file_path, 'w') do |file|
      file.write(dashboard_config_file.to_yaml)
    end

    sections
  end

  def create_section_items_map(services)
    section_items_map = {}

    services.each do |c|
      item_info = create_hash_from_service(c)
      category = item_info.category

      if section_items_map[category] == nil
        section_items_map[category] = []
      end
      section_items_map[category] << item_info.hash
    end

    section_items_map
  end

  def create_item_from_service(service)
    Item.new(service.name, service.hostname, service.category, "favicon-local", ["_autogenerated"])
  end

  def create_hash_from_service(service)
    hash = {
      "title" => service.name,
      "url" => service.hostname,
      "icon" => if service.icon? then service.icon else "favicon-local" end,
      "tags" => ["_autogenerated"]
    }

    ItemInfo.new(hash, service.category)
  end

  def create_item_from_item_json(item)
    Item.new(item["title"], item["url"], item["icon"], item["tags"])
  end

  class ItemInfo
    attr_reader :hash
    attr_reader :category

    def initialize(hash, category)
      @hash = hash
      @category = category
    end
  end

  class Item
    attr_reader :title
    attr_reader :url
    attr_reader :icon
    attr_reader :tags
    attr_reader :category

    def initialize(name, url, category, icon, tags)
      @name = name
      @url = url
      @category = category
      @icon = icon
      @tags = tags
    end
  end
end